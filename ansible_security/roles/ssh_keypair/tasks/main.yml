---
- name: ensure $HOME/.ssh folder
  file:
    path: /root/.ssh
    state: directory
    owner: root
    group: root
    mode: 0700

- name: check private key existent
  stat:
    path: /root/.ssh/id_rsa
  register: check_private_key

- name: ensure private key is existent
  openssh_keypair:
    path: /root/.ssh/id_rsa
  register: ssh_keypair
  when:
    - not check_private_key.stat.exists

- name: get id_rsa public key
  shell: |
    ssh-keygen -y -f /root/.ssh/id_rsa
  changed_when: false
  register: public_key

- name: ensure the public key
  copy:
    content: "{{ public_key.stdout_lines.0 }}"
    dest: /root/.ssh/id_rsa.pub

- name: add the public key into authorized_keys
  authorized_key:
    user: root
    key: "{{ public_key.stdout_lines.0 }}"

- name: check /root/.ssh/config file
  stat:
    path: /root/.ssh/config
  register: check_ssh_config

- name: manage .ssh/config file
  copy:
    content: |
      Host *
        Compression yes
        ForwardAgent yes
        StrictHostKeyChecking no
    dest: /root/.ssh/config
    mode: 0600
    owner: root
    group: root
  when:
    - not check_ssh_config.stat.exists
